Объекты:
Person(String name, int age, double weight, Gender gender, List<Phone> phones)
Phone(Operator operator, String number)
Enums -> Gender, Operator

 Получите список Person и отфильтруйте только те, у которых age > n и выведите в консоль.
 Получите список Person, отфильтруйте только те, у кого weight > n, преобразуйте в name и выведите в консоль.
 Получите список Person, отфильтруйте только те, у кого кол-во телефонов > n, преобразуйте в номера телефонов и выведите в консоль.
 Получите список Person, преобразуйте в name и затем преобразуйте в строку, что бы имена были через запятую.
 Получите список Person и отсортируйте их по возрасту в порядке убывания, если возраст равен, то по именам и выведите в консоль.
 Получите список Person и сгруппируйте их по полу.
 Получите список Person и проверьте есть ли в этом списке человек, у которого номер телефона N значению.
 Получите список Person, получите n по порядку человека и получите операторов его телефонов исключая дублирование.
 Получите список Person и получите их средний вес.
 Получние список Person и найдите самого младшего по возрасту.
 Получние список Person, получите их телефоны, сгруппируйте по оператору и рузальтатом группировки должны быть только номера телефонов.
 Получние список Person, сгруппируйте их по полу и результатом группировки должно быть их кол-во.

 Прочтите содержимое текстового файла и сделайте из него частотный словарик. (слово -> и какое кол-во раз это слово встречается в нём)
 Получите список дат и найдите количество дней между первой и последней датой.
 Получите список строк, преобразуйте их в числа, и посчитайте среднее значение (не забудьте отфильтровать не валидные строки)
 Сгенерируйте миллион рандомных чисел и посчитайте их сумму используя parallelStream с двумя потоками.

*По желанию, можно придумать свои задания и их реализовать, только не забудьте добавить описание.
**Написать кастомную реализацию Collector-а и использовать его.